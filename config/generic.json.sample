{
    "loglevel": "INFO",
    "website_listen_ip": "0.0.0.0",
    "website_listen_port": 7100,
    "systemd_service_name": "lacus",
    "concurrent_captures": 2,
    "max_capture_time": 3600,
    "expire_results": 36000,
    "max_retries": 3,
    "only_global_lookups": true,
    "tor_proxy": {
      "server": "socks5://127.0.0.1:9050"
    },
    "global_proxy": {
      "enable": false,
      "server": "",
      "username": "",
      "password": ""
    },
    "allow_headed": false,
    "wireproxy_path": "/path/to/wireproxy",
    "_notes": {
        "loglevel": "Can be one of the value listed here: https://docs.python.org/3/library/logging.html#levels",
        "website_listen_ip": "IP Flask will listen on. Defaults to 0.0.0.0, meaning all interfaces.",
        "website_listen_port": "Port Flask will listen on.",
        "systemd_service_name": "(Optional) Name of the systemd service if your project has one.",
        "concurrent_captures": "How many captures can happen at the same (expect ~2Gb of ram/capture)",
        "only_global_lookups": "Set it to True if your instance is publicly available so users aren't able to scan your internal network",
        "max_capture_time": "The very maximal time we allow a capture to keep going. Should only be triggered by captures that cause playwright to never quit, or captures with way too many children.",
        "expire_results": "The capture results are stored in redis. The time after which they're expired (in seconds). Set it to a lower value (but not too low) if you have a lot of captures and not a lot of memory",
        "max_retries": "The very maximal amount of times lacus will retry a failing capture.",
        "tor_proxy": "URL to connect to a SOCKS5 proxy for crawling onions domains. If configured, all the URLs pointing to .onion domains will be transparently resolved over this proxy. For Proxies exposed to the users, use 'proxies.json.sample'.",
        "global_proxy": "Proxy configuration to use for *all* the requests (except .onions)",
        "allow_headed": "Allow users to use the headed version of the browser. It requires a graphical environment.",
        "wireproxy_path": "Path to the wireproxy binary. Useful if you have wireguard VPNs to expose to lacus. Get it from there: https://github.com/whyvl/wireproxy/"
    }
}
